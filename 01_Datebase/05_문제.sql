--1. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급 조회
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE EMP_NAME LIKE '전%' AND (SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE SUBSTR(EMP_NO,1,2) IN (70,71,72,73,74,75,76,77,78,79))
OR (SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
AND SUBSTR(EMP_NO,8,1) = '2' OR SUBSTR(EMP_NO,8,1) = '4');


SELECT EMP_NAME,EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE= DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2)>= 70 AND SUBSTR(EMP_NO,1,2) < 80
AND(SUBSTR(EMP_NO,8,1)) IN ('2','4')
AND EMP_NAME LIKE '전%';



SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE EMP_NAME LIKE '전%' AND (SELECT EMP_NO
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE SUBSTR(EMP_NO,1,2) IN (70,71,72,73,74,75,76,77,78,79));
OR (SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
AND SUBSTR(EMP_NO,8,1) = '2' OR SUBSTR(EMP_NO,8,1) = '4');

SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE EMP_NAME LIKE '전%' 

AND         SUBSTR(EMP_NO,1,2) IN (SELECT SUBSTR(EMP_NO,1,2)
            FROM EMPLOYEE
            JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
            WHERE SUBSTR(EMP_NO,1,2) IN (70,71,72,73,74,75,76,77,78,79))
            
AND         SUBSTR(EMP_NO,8,1) IN (SELECT SUBSTR(EMP_NO,8,1)
            FROM EMPLOYEE
            JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
            AND SUBSTR(EMP_NO,8,1) = '2' OR SUBSTR(EMP_NO,8,1) = '4');
            

--3. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회  
SELECT EMP_ID, EMP_NAME, JOB_CODE
FROM EMPLOYEE
WHERE EMP_NAME = (SELECT EMP_NAME
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%형%');

SELECT EMP_NAME
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%형%';


--4. 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회

SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE DEPT_CODE IN (SELECT DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE IN ('D5', 'D6'));

SELECT DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE IN ('D5', 'D6');

--5. 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IN (SELECT BONUS
FROM EMPLOYEE
WHERE BONUS IS NOT NULL);


SELECT EMP_NAME, BONUS
FROM EMPLOYEE
WHERE BONUS IS NOT NULL;

--6. 사원 명, 직급 명, 부서 명, 지역 명 조회

SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE);

--7. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME IN ('한국', '일본');




SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME IN (SELECT NATIONAL_NAME
                                FROM EMPLOYEE
                                JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
                                JOIN JOB USING(JOB_CODE)
                                JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
                                JOIN NATIONAL USING(NATIONAL_CODE)
                                WHERE NATIONAL_NAME IN('한국', '일본'));
;


SELECT NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME IN('한국', '일본');


SELECT EMP_NAME, NATIONAL_NAME
FROM EMPLOYEE
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE);

--8. 한명의 사원과 같은 부서에서 일하는 사원의 이름 조회(자체조인 활용)
--같은 부서에서 일하는 다른 사원의 이름을 조회하시오
--단 모든 사원이 자신의 부서에서 함께 일하는 다른 사원의 이름을 확인할 수 있어야 합니다.
--예) 사원 a가 속한 부서에서 다른 사원 B의 이름을 조회

SELECT E.EMP_NAME, E.DEPT_CODE, D.EMP_NAME, D.DEPT_CODE
FROM EMPLOYEE E
JOIN EMPLOYEE D ON(E.DEPT_CODE = D.DEPT_CODE)
WHERE E.EMP_ID != D.EMP_ID
ORDER BY E.EMP_ID;




--9. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용)
SELECT EMP_NAME, JOB_NAME, SALARY+ SALARY*NVL(BONUS,0)
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE BONUS IS NULL AND JOB_CODE IN ('J4','J7');








SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE              보너스가 없어야하고 AND 직급 코드가 J4, J7
;
SELECT EMP_NAME, JOB_NAME, SALARY, JOB_CODE, NVL(BONUS,0)
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE JOB_CODE IN ('J4','J7') AND BONUS IS  NULL;

--10. 부서 명과 부서 별 급여 합계 조회
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE;


--11. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회

SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE= DEPT_ID)
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (SELECT SUM(SALARY)*0.2
FROM EMPLOYEE);


SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (SELECT SUM(SALARY) * 0.2
FROM EMPLOYEE);



SELECT SUM(SALARY) * 0.2
FROM EMPLOYEE;



--12. 나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
-- ROWNUM활용?
SELECT ROWNUM, EMP_ID, EMP_NAME, 나이, DEPT_TITLE, JOB_NAME
FROM (SELECT EMP_ID, EMP_NAME ,100+SUBSTR(SYSDATE,1,2) -SUBSTR(EMP_NO,1,2) AS "나이", DEPT_TITLE, JOB_CODE
            FROM EMPLOYEE
            JOIN JOB USING(JOB_CODE)
            JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
            ORDER BY 나이 ASC)
JOIN JOB USING(JOB_CODE)
WHERE ROWNUM < = 1;


FLOOR(SYSDATE - TO_DATE(SUBSTR(EMP_NO,1,6), 'RR-MM-DD'))/'365')

SELECT EMP_ID, EMP_NAME ,FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO,1,6), 'RR-MM-DD'))/'365') AS "나이", DEPT_TITLE, JOB_CODE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
ORDER BY 나이 ASC ;




SELECT EMP_ID, EMP_NAME, FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO,1,6), 'RR-MM-DD'))/'365') AS "나이", DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_cODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
ORDER BY 나이 ;







SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE);

SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
ORDER BY EMP_NO DESC;

SELECT ROWNUM, EMP_ID, EMP_NAME, 100-TO_NUMBER(SUBSTR(EMP_NO,1,2)) + TO_NUMBER(SUBSTR(SYSDATE,1,2)) AS "나이", DEPT_TITLE, JOB_NAME
FROM (SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
ORDER BY EMP_NO DESC)
WHERE ROWNUM <= 1;


;
SELECT SUBSTR(EMP_NO,1,2)
FROM EMPLOYEE;

SELECT 100-TO_NUMBER(SUBSTR(EMP_NO,1,2)) + TO_NUMBER(SUBSTR(SYSDATE,1,2)) AS "나이"
FROM EMPLOYEE;
